apply plugin: 'groovy'

repositories {
    mavenCentral()
}

dependencies {
    testCompile "org.testng:testng:6.9.9"
    testCompile 'com.jayway.restassured:rest-assured:2.8.0'
    compile "net.sf.opencsv:opencsv:2.3"

//    compile "org.uncommons:reportng:1.1.4"
//    compile "velocity:velocity:1.4"
//    compile "com.google.inject:guice:4.0"
//    compile group: 'org.testng', name: 'testng', version: '6.9.10'
//    compile "org.codehaus.groovy:groovy-all:2.4.5"
}

task testSuite(type: Test, dependsOn: [classes,testClasses]) {
    Properties properties = new Properties();
    def fis=new FileInputStream(System.getProperty("user.dir")+"/src/test/resources/".replace('/',File.separator)+"build.properties")
    properties.load(fis)
    properties.each { key, value ->
        println "Key-->"+ key
        println "Value-->"+value
        if (System.getProperty(key)==null) {
            systemProperty key, value
        }
        else{
            systemProperty key, System.getProperty(key)
        }
        println "Key1-->"+ key
        println "Value1-->"+value
    }
reports{
    //gradle test command executes the test only one time per change.
    // So if you are running it the second time there will be no output on test results.
    // You can also see this in the building output: gradle then says UP-TO-DATE on tests.
    // So its not executed a n-th time.
    //If you want to force gradle to always run fresh tests
    outputs.upToDateWhen { false }
    html.destination =  reporting.file("$name/tests")
    junitXml.destination = file("$buildDir/test-results/$name")
}

    test.testLogging.showStandardStreams = true

    delete "$buildDir/tmp"
    delete "$buildDir/test-results"
    delete "$buildDir//resources"
    delete "$buildDir//reports"

    useTestNG() {
        test.testLogging.showStandardStreams = true
        outputDirectory = file("$buildDir//TestNgReports")
        useDefaultListeners = true

//        options {
//            listeners << 'org.uncommons.reportng.HTMLReporter'
//            listeners << 'org.uncommons.reportng.JUnitXMLReporter'
//        }
        suites 'src/test/resources/test.xml'
    }

}